# -*- coding: utf-8 -*-
"""NewsCategorization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j_zainjCR_s1WUteeyYdnaxpdG9SamYA
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
from sklearn.feature_extraction.text import TfidfVectorizer
from imblearn.over_sampling import SMOTE
from sklearn.ensemble import RandomForestClassifier
from imblearn.under_sampling import RandomUnderSampler
from collections import Counter
from sklearn.metrics import classification_report, roc_auc_score, confusion_matrix

df = pd.read_csv('/content/news_category_classification.csv')

df.head(10)

df.isna().sum()

vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df['title'])  # Changed 'headline' to 'title'
y = df['category']

from sklearn.model_selection import train_test_split

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = MultinomialNB()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print(classification_report(y_test, y_pred))

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

y_pred1 = rf.predict(X_test)

print(classification_report(y_test, y_pred1))

from sklearn.multiclass import OneVsRestClassifier
from sklearn.svm import SVC

one = OneVsRestClassifier(SVC())
one.fit(X_train, y_train)

y_pred2 = one.predict(X_test)

print(classification_report(y_test, y_pred2))

